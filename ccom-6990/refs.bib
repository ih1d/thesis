@inproceedings{abadi2017computational,
  title={A computational model for TensorFlow: an introduction},
  author={Abadi, Mart{\'\i}n and Isard, Michael and Murray, Derek G},
  booktitle={Proceedings of the 1st ACM SIGPLAN International Workshop on Machine Learning and Programming Languages},
  pages={1--7},
  year={2017},
  annotate={This paper discusses how TensorFlow works under the hood, by explaining a very limited version of TensorFlow's dataflow computational model.
  The limited version contains variables, tensors, and read and write operations on variables. The authors explain the semantics of these operations, and how the dataflow graph behaves.}
}

@inproceedings{omlpl,
  title={On machine learning and programming languages},
  booktitle={},
  author={Innes, Mike and Karpinski, Stefan and Shah, Viral and Barber, David and Saito Stenetorp, PLEPS and Besard, Tim and Bradbury, James and Churavy, Valentin and Danisch, Simon and Edelman, Alan and others},
  year={2018},
  organization={Association for Computing Machinery (ACM)},
  annotate={This paper argues that a new language for machine learning is needed. There are various arguments: libraries like TensorFlow 
  are already languages in themselves, current languages work as meta-languages, and a new language could improve certain features.}
}
@article{streamfusion,
  title={Stream fusion: From lists to streams to nothing at all},
  author={Coutts, Duncan and Leshchinskiy, Roman and Stewart, Don},
  journal={ACM SIGPLAN Notices},
  volume={42},
  number={9},
  pages={315--326},
  year={2007},
  publisher={ACM New York, NY, USA},
  annotate={The main idea behind this paper goes back to the Deforestation paper by Philip Wadler. 
  The idea is to eliminate intermediate lists that are created when composing functions by working on the co-structure of the list
  (i.e. the cons instead of the whole list). Also use GHC's rules to perform optimizations.}
}

@inproceedings{exploit,
  title={Exploiting vector instructions with generalized stream fusion},
  author={Mainland, Geoffrey and Leshchinskiy, Roman and Peyton Jones, Simon},
  booktitle={Proceedings of the 18th ACM SIGPLAN international conference on Functional programming},
  pages={37--48},
  year={2013}
}

@inproceedings{carlsson1993fudgets,
  title={Fudgets: A graphical user interface in a lazy functional language},
  author={Carlsson, Magnus and Hallgren, Thomas},
  booktitle={Proceedings of the conference on Functional programming languages and computer architecture},
  pages={321--330},
  year={1993},
  annotate={This paper discusses how stream processing can model the processes of graphical user interfaces.
  The main idea is to abstract over the internals of the library, and provide a high-level API that works by message passing.
  The paper also presents how easily combinators are derived from the basic building blocks.}
}